// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks-staging/chase-test-4-sample-sdk/pkg/models/shared"
	"net/http"
)

type QueryEventLogRequest struct {
	// The filter to apply to the query.
	Filters *shared.Filters `queryParam:"serialization=json,name=filters"`
}

func (o *QueryEventLogRequest) GetFilters() *shared.Filters {
	if o == nil {
		return nil
	}
	return o.Filters
}

type QueryEventLogResponse struct {
	// OK
	BoundedRequests []shared.BoundedRequest
	// HTTP response content type for this operation
	ContentType string
	// Default error response
	Error *shared.Error
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *QueryEventLogResponse) GetBoundedRequests() []shared.BoundedRequest {
	if o == nil {
		return nil
	}
	return o.BoundedRequests
}

func (o *QueryEventLogResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *QueryEventLogResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *QueryEventLogResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *QueryEventLogResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
