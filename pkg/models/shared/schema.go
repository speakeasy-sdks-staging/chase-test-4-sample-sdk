// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks-staging/chase-test-4-sample-sdk/pkg/utils"
	"time"
)

// A Schema represents an API schema for a particular Api and Version.
type Schema struct {
	// The ID of the Api this Schema belongs to.
	APIID string `json:"api_id"`
	// Creation timestamp.
	CreatedAt time.Time `json:"created_at"`
	// A detailed description of the Schema.
	Description string `json:"description"`
	// An ID referencing this particular revision of the Schema.
	RevisionID string `json:"revision_id"`
	// The version ID of the Api this Schema belongs to.
	VersionID string `json:"version_id"`
	// The workspace ID this Schema belongs to.
	WorkspaceID string `json:"workspace_id"`
}

func (s Schema) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *Schema) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Schema) GetAPIID() string {
	if o == nil {
		return ""
	}
	return o.APIID
}

func (o *Schema) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *Schema) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *Schema) GetRevisionID() string {
	if o == nil {
		return ""
	}
	return o.RevisionID
}

func (o *Schema) GetVersionID() string {
	if o == nil {
		return ""
	}
	return o.VersionID
}

func (o *Schema) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}
